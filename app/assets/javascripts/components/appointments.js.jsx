var Appointments = React.createClass({  getInitialState: function(){    return ({      appointments: this.props.appointments,      title:  `Title ${(this.props.appointments.length + 1).toString()}`,      time: 'Tomorrow at 9am',      min_time: moment(),      max_time: undefined    })  },  handleUserInput: function(obj){    this.setState(obj)  },  // update_datetime_hash: { min_time: moment(), max_time: moment() } } // min_time OR and XOR max_time  handleDatetimeFilterUpdate: function(update_datetime_hash) {    this.setState(update_datetime_hash)  },  handleFormSubmit: function(){    var appointment = { title: this.state.title, time: this.state.time };    var that = this;    $.post('/appointments', {appointment: appointment}, function(appointments){      that.setState({appointments: appointments, title: `Title ${ (appointments.length + 1).toString() }`})    }, 'json')  },  handleAppointmentDelete: function(appointment_id){    debugger    var that = this;    $.ajax({      url: '/appointments/' + appointment_id,      type: 'DELETE',      format: 'json',      success: function(appointments) {        that.setState({appointments: appointments, title: `Title ${(appointments.length + 1).toString()}`})      }    });  },  render: function() {    return (      <div>        <AppointmentForm title={this.state.title}                         time={this.state.time}                         onUserInput={this.handleUserInput}                         onFormSubmit={this.handleFormSubmit} />        <AppointmentsList appointments={this.state.appointments}                          onAppointmentDelete={this.handleAppointmentDelete}                          handleDatetimeFilterUpdate={this.handleDatetimeFilterUpdate}                          min_time={this.state.min_time}                          max_time={this.state.max_time} />      </div>    )  }});